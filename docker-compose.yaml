services:
  database:
    image: postgres:16-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: weatherdb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: pw
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d weatherdb"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  init_service:
    build:
      context: .
      dockerfile: backend/init_service/Dockerfile
    container_name: init_service
    restart: no
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: weatherdb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: pw
    depends_on:
      postgres:
        condition: service_healthy
        restart: true


# openmeteo_client:
#   build:
#     context: ./openmeteo_client
#     dockerfile: Dockerfile
#   container_name: openmeteo_client
#   restart: on-failure
#   environment:
#     POSTGRES_HOST: postgres
#     POSTGRES_PORT: 5432
#     POSTGRES_DB: weatherdb
#     POSTGRES_USER: myuser
#     POSTGRES_PASSWORD: pw
#   depends_on:
#     postgres:
#       condition: service_healthy
#     db_init:
#       condition: service_completed_successfully

# api:
#   build:
#     context: ./api
#     dockerfile: Dockerfile
#   container_name: api
#   restart: on-failure
#   environment:
#     POSTGRES_HOST: postgres
#     POSTGRES_PORT: 5432
#     POSTGRES_DB: weatherdb
#     POSTGRES_USER: myuser
#     POSTGRES_PASSWORD: pw
#   ports:
#     - "8001:8001"
#   depends_on:
#     postgres:
#       condition: service_healthy


volumes:
  data:
