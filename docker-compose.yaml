services:
  database:
    image: postgres:16-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: weatherdb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: pw
    volumes:
      - data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d weatherdb"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  bootstrap_service:
    build:
      context: .
      dockerfile: backend/bootstrap_service/Dockerfile
    container_name: weather_bootstrap_service
    restart: no
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: weatherdb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: pw
      CONFIG_FILE: dev_config.json
    depends_on:
      database:
        condition: service_healthy
        restart: true

  maintenance_service:
    build:
      context: .
      dockerfile: backend/maintenance_service/Dockerfile
    container_name: weather_maintenance_service
    restart: no
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: weatherdb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: pw
      CONFIG_FILE: dev_config.json
    depends_on:
      database:
        condition: service_healthy
        restart: true
      bootstrap_service:
        condition: service_completed_successfully

volumes:
  data:
